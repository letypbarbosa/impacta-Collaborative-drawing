/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.mam.cd.view;

import br.mam.cd.model.Circle;
import br.mam.cd.model.ShapeFactory;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.net.MalformedURLException;
import java.util.ArrayList;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import ws.quadro.Receiver;
import ws.quadro.Transmitter;

/**
 *
 * @author Marcio
 */
public class JFrameDesenho extends javax.swing.JFrame implements Observer{

    private ArrayList<Observer> observers = new ArrayList<Observer>();
    BufferedImage image=new BufferedImage(800, 600, BufferedImage.TYPE_INT_RGB);
   
    
       
    Circle circle =new Circle();
    String remetente="user";
    Integer strokeWidth=2;
    private   Thread threadReceiver=null;
    private   Thread threadTransmitter=null;
    private   Receiver receiver=null;
    private   Transmitter transmitter=null;
    
    ShapeFactory shapeFactory = new ShapeFactory();
    static JComponentArea jPanelComponentArea= new JComponentArea();
     Integer x1,y1;
     
    public JFrameDesenho()  {
       
        initComponents();     
        /**
         * MUDAR
         */
        circle.addObserver(this); 
 
       
      //   startReceiver();
       
        pack();
         
       
      
    }
    
    public void startReceiver()    {
       
          try {
              receiver=new Receiver(circle, remetente, jTextFieldIpServer.getText());              
              threadReceiver= new Thread(receiver); 
              threadReceiver.start();
              } catch (MalformedURLException ex) {
                 jLabelMessage.setText(ex.getMessage());
          }
    
    }
    
    public void stopReceiver() throws InterruptedException{
 
            System.out.print("Parando de escutar.. ");
            if (threadReceiver != null) {
                receiver.stop();
                threadReceiver.join();
            System.out.print("Thread receiver parada com sucesso.");  
            jLabelMessage.setText("Thread Transmitter parada com sucesso.");
        }
             
    }
    

    public void startTrasmit(){
            try {
               transmitter = new Transmitter(circle,jTextRemetente.getText(),jTextFieldIpServer.getText());
               threadTransmitter = new Thread(transmitter);
               threadTransmitter.start();
             
          } catch (Exception ex) {
              jLabelMessage.setText(ex.getMessage());
          }
    }
    
  public void stopTransmit() throws InterruptedException{
      System.out.print("Parando de escutar.. ");
            if (threadTransmitter != null) {
                transmitter.stop();
                threadTransmitter.join();
            System.out.print("Thread Transmitter parada com sucesso.");
             jLabelMessage.setText("Thread Transmitter parada com sucesso.");
            
        }
             
  }  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelComponentArea2 = new javax.swing.JPanel();
        jLabelImageView = new JLabel(new ImageIcon(image));
        jLabelMessage = new javax.swing.JLabel();
        jTextRemetente = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldIpServer = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelImageView.setForeground(new java.awt.Color(204, 204, 204));
        jLabelImageView.setText("ImageView");
        jLabelImageView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabelImageViewMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabelImageViewMouseReleased(evt);
            }
        });
        jLabelImageView.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabelImageViewMouseDragged(evt);
            }
        });

        javax.swing.GroupLayout jPanelComponentArea2Layout = new javax.swing.GroupLayout(jPanelComponentArea2);
        jPanelComponentArea2.setLayout(jPanelComponentArea2Layout);
        jPanelComponentArea2Layout.setHorizontalGroup(
            jPanelComponentArea2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelComponentArea2Layout.createSequentialGroup()
                .addGroup(jPanelComponentArea2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelImageView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelComponentArea2Layout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addComponent(jLabelMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelComponentArea2Layout.setVerticalGroup(
            jPanelComponentArea2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelComponentArea2Layout.createSequentialGroup()
                .addComponent(jLabelImageView, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE))
        );

        jTextRemetente.setText("User");
        jTextRemetente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextRemetenteKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("User:");

        jTextFieldIpServer.setText("10.0.200.243");
        jTextFieldIpServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIpServerActionPerformed(evt);
            }
        });
        jTextFieldIpServer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldIpServerKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldIpServerKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("IP servidor:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldIpServer, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextRemetente, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jPanelComponentArea2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextRemetente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldIpServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelComponentArea2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void jLabelImageViewMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelImageViewMouseDragged
       
        Graphics graphics = image.getGraphics();
        Graphics2D g = (Graphics2D) graphics;
        
        g.setColor(Color.black);
        g.fillRect(0, 0, image.getWidth(null), image.getHeight(null));
        
        g.setColor(Color.white);
        g.drawOval(x1, y1, evt.getX(), evt.getY());
        image.getGraphics().dispose();
        g.dispose();
        jLabelImageView.repaint();
         
      
    }//GEN-LAST:event_jLabelImageViewMouseDragged

    private void jLabelImageViewMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelImageViewMouseReleased
  Graphics graphics=  image.getGraphics();
       Graphics2D g = (Graphics2D)graphics;
       
    
        
       g.drawOval(x1, y1, evt.getX(), evt.getY());
             
       jLabelImageView.getGraphics().dispose();        
       
      //  Shape circle = shapeFactory.getShape(TypesOfShapes.Circle);
        circle.setId(1l);
        circle.setX(x1);
        circle.setY(y1);
        circle.setX2(evt.getX());
        circle.setY2(evt.getY());
        circle.setRadius(evt.getX());
        circle.setStrokeWidth(strokeWidth);
        
        //so atualiza com todos parametros setados
        if(circle.isValid()){
            circle.updateSvg();            
            startTrasmit();    
        } 
    }//GEN-LAST:event_jLabelImageViewMouseReleased

    private void jLabelImageViewMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelImageViewMousePressed
         
        x1 = evt.getX();
        y1 = evt.getY(); 
    }//GEN-LAST:event_jLabelImageViewMousePressed

    private void jTextFieldIpServerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldIpServerKeyTyped
        
    }//GEN-LAST:event_jTextFieldIpServerKeyTyped

    private void jTextFieldIpServerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldIpServerKeyReleased
           if(evt.getKeyCode()==10){
            startReceiver();
           }
    }//GEN-LAST:event_jTextFieldIpServerKeyReleased

    private void jTextRemetenteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextRemetenteKeyReleased
       if(evt.getKeyCode()==10){
           try {
               stopReceiver();
               
               startReceiver();
           } catch (InterruptedException ex) {
               Logger.getLogger(JFrameDesenho.class.getName()).log(Level.SEVERE, null, ex);
           }
         
       
       }
    }//GEN-LAST:event_jTextRemetenteKeyReleased

    private void jTextFieldIpServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIpServerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIpServerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameDesenho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameDesenho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameDesenho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameDesenho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                
        JFrameDesenho jFrameDesenho = new JFrameDesenho();
        jFrameDesenho.setSize(500, 500);
        jFrameDesenho.getContentPane().add(jPanelComponentArea);
        jFrameDesenho.pack();
        jFrameDesenho.setVisible(true);
            }
      });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelImageView;
    private javax.swing.JLabel jLabelMessage;
    private javax.swing.JPanel jPanelComponentArea2;
    private javax.swing.JTextField jTextFieldIpServer;
    private javax.swing.JTextField jTextRemetente;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object o1) {
    
        
       Graphics graphics=  image.getGraphics();
       Graphics2D g = (Graphics2D)graphics;
        
        g.setColor(Color.black);
        g.fillRect(0, 0, image.getWidth(null), image.getHeight(null));
        g.setColor(Color.white);
        
        if(o instanceof  Circle){
            Circle c = (Circle)o;
            if(c.isValid()){ 
                if(c.getFill().contains("#")){
                    System.err.println();
                    Color color;
                    color = Color.decode(c.getFill());
                    g.setColor(color);
                }
               g.drawString(receiver.getAutor(), circle.getX(), circle.getY());                       
               g.drawOval(c.getX(), c.getY(),c.getX2(), c.getY2());
               g.dispose();
               
                jLabelImageView.repaint();
                jLabelMessage.setText(receiver.getAutor()+" : " +circle.getSvg());
                jLabelMessage.repaint();
            }
     
        }
    }


}
